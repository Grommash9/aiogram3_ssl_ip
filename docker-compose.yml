version: '3.17'
services:
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    networks:
      my_network:
        ipv4_address: 192.168.1.10
    depends_on:
      - nginx-service
      - redis
      - mysql-server
    ports:
      - "2005:2005"
    environment:
      ROOT_PASSWORD: ${ROOT_PASSWORD}
      BOT_TOKEN: ${BOT_TOKEN}
      SERVER_IP_ADDRESS: ${SERVER_IP_ADDRESS}
    volumes:
      - nginx-certs:/nginx-certs
  nginx-service:
    build:
      context: ./nginx-service
      dockerfile: Dockerfile
      args:
        SERVER_IP_ADDRESS: ${SERVER_IP_ADDRESS}
    ports:
      - "443:443"
    volumes:
      - nginx-certs:/nginx-certs
    networks:
      my_network:
        ipv4_address: 192.168.1.20
  redis:
    image: redis:latest
    networks:
      my_network:
        ipv4_address: 192.168.1.30
  mysql-server:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    environment:
      ROOT_PASSWORD: ${ROOT_PASSWORD}
    ports:
      - "3306:3306"
      - "33060:33060"
    # networks:
    #   my_network:
    #     ipv4_address: 192.168.1.40
    volumes:
      - mysql-data:/var/lib/mysql


networks:
  my_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24

volumes:
  mysql-data:
    driver: local
  nginx-certs:
